{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/cfive/cfive.component.html","webpack:///./src/app/cfour/cfour.component.html","webpack:///./src/app/cone/cone.component.html","webpack:///./src/app/cthree/cthree.component.html","webpack:///./src/app/ctwo/ctwo.component.html","webpack:///./src/app/list-employees/list-employees.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cfive/cfive.component.css","webpack:///./src/app/cfive/cfive.component.ts","webpack:///./src/app/cfour/cfour.component.css","webpack:///./src/app/cfour/cfour.component.ts","webpack:///./src/app/cone/cone.component.css","webpack:///./src/app/cone/cone.component.ts","webpack:///./src/app/cthree/cthree.component.css","webpack:///./src/app/cthree/cthree.component.ts","webpack:///./src/app/ctwo/ctwo.component.css","webpack:///./src/app/ctwo/ctwo.component.ts","webpack:///./src/app/ctwo/employee.service.ts","webpack:///./src/app/list-employees/list-employees.component.css","webpack:///./src/app/list-employees/list-employees.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/shared/custom.validators.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<app-login></app-login>\\n\\n\"","module.exports = \"<p>\\n  cfive works!\\n  {{cimal}} \\n  \\n</p>\\n\"","module.exports = \"<p>\\n  cfour works!\\n\\n</p>\\n\"","module.exports = \"<form class=\\\"form-horizontal\\\"  [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create Employee</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"fullName\\\">Full Name</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fullName\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"email\\\">Email</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n        </div>\\n      </div>\\n\\n      <div formGroupName=\\\"skills\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" for=\\\"skillName\\\">\\n            Skill\\n          </label>\\n          <div class=\\\"col-sm-4\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"skillName\\\"\\n                placeholder=\\\"Name\\\" formControlName=\\\"skillName\\\">\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Experience in Years\\\"\\n                class=\\\"form-control\\\" formControlName=\\\"experienceInYears\\\">\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-2 control-label\\\">Proficiency</label>\\n          <div class=\\\"col-md-8\\\">\\n            <label class=\\\"radio-inline\\\">\\n              <input id=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"beginner\\\"\\n                     formControlName=\\\"proficiency\\\">Beginner\\n            </label>\\n            <label class=\\\"radio-inline\\\">\\n              <input id=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"intermediate\\\"\\n                     formControlName=\\\"proficiency\\\">Intermediate\\n            </label>\\n            <label class=\\\"radio-inline\\\">\\n              <input id=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"advanced\\\"\\n                     formControlName=\\\"proficiency\\\">Advanced\\n            </label>\\n          </div>\\n        </div>\\n    </div>\\n   \\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <div class=\\\"btn-toolbar\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onLoadDataclick()\\\">LOAD</button>\\n    </div></div>\\n  </div>\\n\\n\\n\\n\\n</form>\\n\\n\\n\\n<table border=\\\"1\\\">\\n  <tr>\\n    <th style=\\\"padding: 10px\\\">FormGroup</th>\\n    <th style=\\\"padding: 10px\\\">FormControl (fullName)</th>\\n  </tr>\\n  <tr>\\n    <td style=\\\"padding: 10px\\\">\\n      touched : {{ employeeForm.touched }}\\n      <br/> dirty : {{ employeeForm.dirty }}\\n      <br/> valid : {{ employeeForm.valid }}\\n      <br/> Form Values : {{employeeForm.value | json}}\\n    </td>\\n    <td style=\\\"padding: 10px\\\">\\n      touched : {{ employeeForm.get('fullName').touched }}\\n      <br/> dirty : {{ employeeForm.get('fullName').dirty }}\\n      <br/> valid : {{ employeeForm.get('fullName').valid }}\\n      <br/> FullName Value : {{employeeForm.get('fullName').value}}\\n    </td>\\n  </tr>\\n</table>\\n\\n\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Brand</a>\\n      </div>\\n  \\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li class=\\\"active\\\"><a href=\\\"#\\\">Link <span class=\\\"sr-only\\\">(current)</span></a></li>\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown <span class=\\\"caret\\\"></span></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"#\\\">Action</a></li>\\n              <li><a href=\\\"#\\\">Another action</a></li>\\n              <li><a href=\\\"#\\\">Something else here</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li><a href=\\\"#\\\">Separated link</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li><a href=\\\"#\\\">One more separated link</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <form class=\\\"navbar-form navbar-left\\\" [formGroup]=\\\"lkljlyeeForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n        </form>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a href=\\\"#\\\">Link</a></li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown <span class=\\\"caret\\\"></span></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"#\\\">Action</a></li>\\n              <li><a href=\\\"#\\\">Another action</a></li>\\n              <li><a href=\\\"#\\\">Something else here</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li><a href=\\\"#\\\">Separated link</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n  </nav>\\n<div class=\\\"btn-group\\\">\\n  <button class=\\\"btn btn-danger\\\">Button 1</button>\\n  <button class=\\\"btn btn-default\\\">Button 2</button>\\n  <button class=\\\"btn btn-info\\\">Button 3</button>\\n  <button class=\\\"btn btn-primary\\\">Button 4</button>\\n  <button class=\\\"btn btn-success\\\">Button 5</button>\\n  <button class=\\\"btn btn-warning\\\">Button 6</button>\\n</div>\\n<br>\\n<br>\\n<div class=\\\"btn-toolbar\\\">\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-danger\\\">Button 1</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-default\\\">Button 2</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-info\\\">Button 3</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Button 4</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-success\\\">Button 5</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-warning\\\">Button 6</a>\\n  </div>\\n  <div class=\\\"btn-group\\\">\\n    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Button 7</a>\\n  </div>\\n</div>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-6\\\">\\n      <form class=\\\"form-horizontal\\\" [formGroup]=\\\"emploljjjkljkljlyeeForm\\\">\\n        <div class=\\\"form-group has-success\\\">\\n          <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtStrongPassword\\\">Password</label>\\n          <div class=\\\"col-xs-10\\\">\\n            <input type=\\\"password\\\" id=\\\"txtStrongPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Your password\\\">\\n            <span class=\\\"help-block\\\">Strong Password</span>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group has-warning\\\">\\n          <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtWeakPassword\\\">Password</label>\\n          <div class=\\\"col-xs-10\\\">\\n            <input type=\\\"password\\\" id=\\\"txtWeakPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Your password\\\">\\n            <span class=\\\"help-block\\\">Weak Password</span>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group has-error\\\">\\n          <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtAge\\\">Age</label>\\n          <div class=\\\"col-xs-10\\\">\\n            <input type=\\\"number\\\" id=\\\"txtAge\\\" class=\\\"form-control\\\" placeholder=\\\"Your Age\\\">\\n            <span class=\\\"help-block\\\">Invalid Age</span>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<br>\\n<form class=\\\"form-horizontal\\\" [formGroup]=\\\"ljkljlyeeForm\\\">\\n  <div class=\\\"form-group has-success has-feedback\\\">\\n    <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtStrongPassword\\\">Income</label>\\n    <div class=\\\"col-xs-10\\\">\\n      <div class=\\\"input-group\\\">\\n        <span class=\\\"input-group-addon\\\">$</span>\\n        <input type=\\\"text\\\" id=\\\"txtIncome\\\" class=\\\"form-control\\\" placeholder=\\\"Your annual income after taxes\\\">\\n      </div>\\n      <span class=\\\"glyphicon glyphicon-ok form-control-feedback\\\"></span>\\n      <span class=\\\"help-block\\\">Success</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group has-warning has-feedback\\\">\\n    <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtStrongPassword\\\">Income</label>\\n    <div class=\\\"col-xs-10\\\">\\n      <div class=\\\"input-group\\\">\\n        <span class=\\\"input-group-addon\\\">$</span>\\n        <input type=\\\"text\\\" id=\\\"txtIncome\\\" class=\\\"form-control\\\" placeholder=\\\"Your annual income after taxes\\\">\\n      </div>\\n      <span class=\\\"glyphicon glyphicon-warning-sign form-control-feedback\\\"></span>\\n      <span class=\\\"help-block\\\">Warning</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group has-error has-feedback\\\">\\n    <label class=\\\"col-xs-2 control-label\\\" for=\\\"txtStrongPassword\\\">Income</label>\\n    <div class=\\\"col-xs-10\\\">\\n      <div class=\\\"input-group\\\">\\n        <span class=\\\"input-group-addon\\\">$</span>\\n        <input type=\\\"text\\\" id=\\\"txtIncome\\\" class=\\\"form-control\\\" placeholder=\\\"Your annual income after taxes\\\">\\n      </div>\\n      <span class=\\\"glyphicon glyphicon-remove form-control-feedback\\\"></span>\\n      <span class=\\\"help-block\\\">Error</span>\\n    </div>\\n  </div>\\n</form>\\n<div class=\\\"col-lg-6\\\">\\n  <div class=\\\"input-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" />\\n    <div class=\\\"input-group-btn\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cut</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Copy</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Paste</button>\\n    </div>\\n  </div>\\n</div>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\"","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create Employee</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.fullName}\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"fullName\\\">Full Name</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fullName\\\"\\n            (blur)=\\\"logValidationErrors()\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.fullName\\\">\\n            {{formErrors.fullName}}\\n          </span>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-2 control-label\\\">Contact Preference</label>\\n        <div class=\\\"col-md-8\\\">\\n          <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"email\\\" formControlName=\\\"contactPreference\\\"\\n              (click)=\\\"onContactPrefernceChange('email')\\\">Email\\n          </label>\\n          <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"phone\\\" formControlName=\\\"contactPreference\\\"\\n              (click)=\\\"onContactPrefernceChange('phone')\\\">Phone\\n          </label>\\n        </div>\\n      </div>\\n      <div formGroupName=\\\"emailGroup\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.email}\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" for=\\\"email\\\">Email</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <input id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" (blur)=\\\"logValidationErrors()\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.email\\\">\\n              {{formErrors.email}}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.confirmEmail\\n                                                || formErrors.emailGroup}\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" for=\\\"confirmEmail\\\">\\n            Confirm Email\\n          </label>\\n          <div class=\\\"col-sm-8\\\">\\n            <input id=\\\"confirmEmail\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmEmail\\\"\\n              (blur)=\\\"logValidationErrors()\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.confirmEmail || formErrors.emailGroup\\\">\\n              {{formErrors.confirmEmail ? formErrors.confirmEmail : formErrors.emailGroup}}\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Phone input element -->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.phone}\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"email\\\">Phone</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\" (blur)=\\\"logValidationErrors()\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.phone\\\">\\n            {{formErrors.phone}}\\n          </span>\\n        </div>\\n      </div>\\n      <br>\\n      <br>\\n\\n      <div class=\\\"well\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-offset-2 col-md-4\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addSkillButtonClick()\\\"\\n              [disabled]=\\\"employeeForm.get('skills').invalid\\\">\\n              Add Skill\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div formArrayName=\\\"skills\\\" *ngFor=\\\"let skill of employeeForm.get('skills').controls; let i = index\\\">\\n          <hr *ngIf=\\\"i>0\\\">\\n          <div [formGroupName]=\\\"i\\\">\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':\\n                    skill.get('skillName').invalid && skill.get('skillName').touched}\\\">\\n              <label class=\\\"col-sm-2 control-label\\\" [attr.for]=\\\"'skillName'+i\\\">\\n                Skill\\n              </label>\\n              <div class=\\\"col-sm-4\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [id]=\\\"'skillName'+i\\\" formControlName=\\\"skillName\\\"\\n                  placeholder=\\\"C#, Java, Angular etc...\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('skillName').errors?.required &&\\n                                                        skill.get('skillName').touched\\\">\\n                  Skill Name is required\\n                </span>\\n              </div>\\n\\n              <div class=\\\"col-sm-6\\\" *ngIf=\\\"employeeForm.get('skills').length>1\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm pull-right\\\" title=\\\"Delete Skill\\\"\\n                  (click)=\\\"removeSkillButtonClick(i)\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n                </button>\\n              </div>\\n\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':\\n                skill.get('experienceInYears').invalid && skill.get('experienceInYears').touched}\\\">\\n              <label class=\\\"col-sm-2 control-label\\\" [attr.for]=\\\"'experienceInYears'+i\\\">\\n                Experience\\n              </label>\\n              <div class=\\\"col-sm-4\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [id]=\\\"'experienceInYears'+i\\\" formControlName=\\\"experienceInYears\\\"\\n                  placeholder=\\\"In Years\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('experienceInYears').errors?.required &&\\n                                                    skill.get('experienceInYears').touched\\\">\\n                  Experience is required\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':\\n                skill.get('proficiency').invalid && skill.get('proficiency').touched}\\\">\\n              <label class=\\\"col-sm-2 control-label\\\">Proficiency</label>\\n              <div class=\\\"col-sm-8\\\">\\n                <label class=\\\"radio-inline\\\">\\n                  <input type=\\\"radio\\\" value=\\\"beginner\\\" formControlName=\\\"proficiency\\\">Beginner\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                  <input type=\\\"radio\\\" value=\\\"intermediate\\\" formControlName=\\\"proficiency\\\">Intermediate\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                  <input type=\\\"radio\\\" value=\\\"advanced\\\" formControlName=\\\"proficiency\\\">Advanced\\n                </label>\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('proficiency').errors?.required &&\\n                                                    skill.get('proficiency').touched\\\">\\n                  Proficiency is required\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"btn-toolbar\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"employeeForm.invalid\\\"\\n              (click)=\\\"onSubmit()\\\">UPDATE</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onadd()\\\">ADD NEW</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n<table border=\\\"1\\\">\\n  <tr>\\n    <th style=\\\"padding: 10px\\\">FormGroup</th>\\n    <th style=\\\"padding: 10px\\\">FormControl (fullName)</th>\\n  </tr>\\n  <tr>\\n    <td style=\\\"padding: 10px\\\">\\n      touched : {{ employeeForm.touched }}\\n      <br /> dirty : {{ employeeForm.dirty }}\\n      <br /> valid : {{ employeeForm.valid }}\\n      <br /> Form Values : {{employeeForm.value | json}}\\n    </td>\\n    <td style=\\\"padding: 10px\\\">\\n      touched : {{ employeeForm.get('fullName').touched }}\\n      <br /> dirty : {{ employeeForm.get('fullName').dirty }}\\n      <br /> valid : {{ employeeForm.get('fullName').valid }}\\n      <br /> FullName Value : {{employeeForm.get('fullName').value}}\\n    </td>\\n  </tr>\\n</table>\"","module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-bordered\\\" *ngIf=\\\"employees && employees.length\\\">\\n    <thead>\\n      <tr class=\\\"bg-primary\\\">\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Contact Preference</th>\\n        <th>Action</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let employee of employees\\\">\\n        <td>{{ employee.fullName }}</td>\\n        <td>{{ employee.email }}</td>\\n        <td>{{ employee.phone }}</td>\\n        <td>{{ employee.contactPreference }}</td>\\n        <td> <button class=\\\"btn btn-primary\\\"  (click)=\\\"editButtonClick(employee.id)\\\">Edit</button></td>\\n        <td> <button class=\\\"btn btn-primary\\\"  (click)=\\\"deleteButtonClick(employee.id)\\\">DELETE</button> </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"one\\\">List</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"edit\\\">Create</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"list\\\">LIST</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"three\\\">BOOTSTRAP</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"four\\\">four</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"five\\\">five</a>\\n      </li>\\n    </ul>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <app-list-employees></app-list-employees>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConeComponent } from './cone/cone.component';\nimport { CtwoComponent } from './ctwo/ctwo.component';\nimport { CthreeComponent } from './cthree/cthree.component';\nimport { CfourComponent } from './cfour/cfour.component';\nimport { CfiveComponent } from './cfive/cfive.component';\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\nconst routes: Routes = [\n  { path: '', component: CtwoComponent },\n  { path: 'one', component: ConeComponent },\n  { path: 'edit', component: CtwoComponent },\n  { path: 'list', component: CtwoComponent },\n  { path: 'list/:id', component: CtwoComponent },\n  { path: 'three', component: CthreeComponent },\n  { path: 'four', component: CfourComponent },\n  { path: 'five', component: CfiveComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lab1';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { EmployeeService } from './ctwo/employee.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ConeComponent } from './cone/cone.component';\nimport { CtwoComponent } from './ctwo/ctwo.component';\nimport { CthreeComponent } from './cthree/cthree.component';\nimport { CfourComponent } from './cfour/cfour.component';\nimport { CfiveComponent } from './cfive/cfive.component';\nimport { ListEmployeesComponent } from './list-employees/list-employees.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ConeComponent,\n    CtwoComponent,\n    CthreeComponent,\n    CfourComponent,\n    CfiveComponent,\n    ListEmployeesComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NmaXZlL2NmaXZlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Variable } from '@angular/compiler/src/render3/r3_ast';\nimport { EventEmitter } from 'protractor';\n\n@Component({\n  selector: 'app-cfive',\n  templateUrl: './cfive.component.html',\n  styleUrls: ['./cfive.component.css']\n})\nexport class CfiveComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n  cimal: number = 6;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nmb3VyL2Nmb3VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CfiveComponent } from '../cfive/cfive.component';\n@Component({\n  selector: 'app-cfour',\n  templateUrl: './cfour.component.html',\n  styleUrls: ['./cfour.component.css']\n})\nexport class CfourComponent implements OnInit {\n  x: number;\n\n  constructor() {\n  }\n\nngOnInit() {\n \n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmUvY29uZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-cone',\n  templateUrl: './cone.component.html',\n  styleUrls: ['./cone.component.css']\n})\nexport class ConeComponent implements OnInit {\n  employeeForm: FormGroup;\n  constructor() { }\n\n  ngOnInit() {\n    this.employeeForm = new FormGroup({\n      fullName: new FormControl(),\n      email: new FormControl(),\n      skills: new FormGroup({\n        skillName: new FormControl(),\n        experienceInYears: new FormControl(),\n        proficiency: new FormControl()\n      })\n    });\n\n  }\n  onSubmit(): void {\n    console.log(this.employeeForm);\n  }\n  onLoadDataclick(): void {\n    this.employeeForm.patchValue({\n      fullName: 'nirbhay',\n      email: 'nirbhay566@gmail.com',\n      skills: {\n        skillName: 'angular',\n        experienceInYears: '4',\n        proficiency: 'advanced',\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N0aHJlZS9jdGhyZWUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-cthree',\n  templateUrl: './cthree.component.html',\n  styleUrls: ['./cthree.component.css']\n})\nexport class CthreeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"hr {\\r\\n    border: 1px solid silver;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3R3by9jdHdvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9jdHdvL2N0d28uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImhyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHNpbHZlcjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, Validator, AbstractControl, FormArray } from '@angular/forms';\nimport { CustomValidators } from '../shared/custom.validators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from './employee.service';\nimport { IEmployee } from '../IEmployee';\nimport { ISkill } from '../ISkill';\n\n@Component({\n  selector: 'app-ctwo',\n  templateUrl: './ctwo.component.html',\n  styleUrls: ['./ctwo.component.css']\n})\nexport class CtwoComponent implements OnInit {\n  employeeForm: FormGroup;\n  employee: IEmployee;\n  // json-server --watch db.json\n  // COUNSTRUCTOR\n  // ng build --prod\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private employeeService: EmployeeService, private router: Router) {\n  }\n  // ON INIT MODULE START\n  ngOnInit() {\n    // VALIDATON FORM GROUP\n    this.employeeForm = this.fb.group({\n      fullName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\n      contactPreference: ['email'],\n      emailGroup: this.fb.group({\n        email: ['', [Validators.required, CustomValidators.emailDomain('dell.com')]],\n        confirmEmail: ['', [Validators.required]],\n      }, { validator: matchEmails }),\n      phone: [''],\n      skills: this.fb.array([\n        this.addSkillFormGroup() // DYNAMIC INTERFACE FUNCTION line 142\n      ])\n    });\n    // ROUT PARAM PASSING\n    this.route.paramMap.subscribe(params => {\n      const empId = +params.get('id');\n      if (empId) {\n        this.getEmployee(empId); // line  93\n      } else {\n        this.employee = {\n          id: null,\n          fullName: '',\n          contactPreference: '',\n          email: '',\n          phone: null,\n          skills: []\n        };\n      }\n    });\n\n    // CROSS VALIDATION\n    function matchEmails(group: AbstractControl): { [key: string]: any } | null {\n      const emailControl = group.get('email');\n      const confirmEmailControl = group.get('confirmEmail');\n      if (emailControl.value === confirmEmailControl.value || confirmEmailControl.pristine && confirmEmailControl.value === '') {\n        return null;\n      } else {\n        return { 'emailMismatch': true };\n      }\n    }\n    // RADIO BUTTON OBSERVABLE SUBSCRIPTION\n    this.employeeForm.get('contactPreference').valueChanges.subscribe((data: string) => {\n        this.onContactPrefernceChange(data);           // FUNCTION CALLING    line 99\n      });\n    // VALIDATION OBSERVABLE SUBSCRIPTION\n    this.employeeForm.valueChanges.subscribe((data) => {\n      this.logValidationErrors(this.employeeForm);    // FUNCTION CALLING    line 78\n    });\n\n  }\n  // ON INIT MODULE ENDS\n\n// THIS IS MAIN LOG VALIDATION  VALIDATION OBSERVABLE\nlogValidationErrors(group: FormGroup = this.employeeForm): void {\n  Object.keys(group.controls).forEach((key: string) => {\n    const abstractControl = group.get(key);\n    this.formErrors[key] = '';\n    if (abstractControl && !abstractControl.valid &&\n      (abstractControl.touched || abstractControl.dirty || abstractControl.value !== '')) {\n      const messages = this.validationMessages[key];\n\n      for (const errorKey in abstractControl.errors) {\n        if (errorKey) {\n          this.formErrors[key] += messages[errorKey] + ' ';\n        }\n      }\n    }\n    if (abstractControl instanceof FormGroup) {\n      this.logValidationErrors(abstractControl);\n    }\n  });\n}\n\n  // CONTACT PREFERENCE DETAIL  RADIO BUTTON OBSERVABLE\n  onContactPrefernceChange(selectedValue: string) {\n    const phoneFormControl = this.employeeForm.get('phone');\n    if (selectedValue === 'phone') {\n      phoneFormControl.setValidators(Validators.required);\n    } else {\n      phoneFormControl.clearValidators();\n    }\n    phoneFormControl.updateValueAndValidity();\n  }\n\n  // LOAD TIME\n  // EDIT FORM DATA\n  editEmployee(employee: IEmployee) {\n    this.employeeForm.patchValue({\n      fullName: employee.fullName,\n      contactPreference: employee.contactPreference,\n      emailGroup: {\n        email: employee.email,\n        confirmEmail: employee.email\n      },\n      phone: employee.phone\n    });\n    this.employeeForm.setControl('skills', this.setExistingSkills(employee.skills));  //CALLING DYNAMIC FORM TYPE ARRAY LOAD TIME\n  }\n  // DYNAMIC FORM FOR API LOADING TIME\n  setExistingSkills(skillSets: ISkill[]): FormArray {\n    const formArray = new FormArray([]);\n    skillSets.forEach(s => {\n      formArray.push(this.fb.group({\n        skillName: s.skillName,\n        experienceInYears: s.experienceInYears,\n        proficiency: s.proficiency\n      }));\n    });\n    return formArray;\n  }\n\n  // DYNAMIC FORM TYPE WHILE ADDING DATA\n  // DYNAMIC GENERATION \n  addSkillFormGroup(): FormGroup {\n    return this.fb.group({\n      skillName: ['', Validators.required],\n      experienceInYears: ['', Validators.required],\n      proficiency: ['', Validators.required]\n    });\n  }\n // ADDING FORM GROUP\n  addSkillButtonClick(): void {\n    (<FormArray>this.employeeForm.get('skills')).push(this.addSkillFormGroup());\n  }\n  //REMOVING FORM GROUP\n  removeSkillButtonClick(skillGroupIndex: number): void {\n    const skillsFormArray = <FormArray>this.employeeForm.get('skills');\n    skillsFormArray.removeAt(skillGroupIndex);\n    skillsFormArray.markAsDirty();\n    skillsFormArray.markAsTouched();\n  }\n\n  //  CALLING API NEEDEDDDDDDDDDD\n  //  CALLING GET API SERVICE APIiiiiiiiiiiiiiiiiiiiiiiiii\n  getEmployee(id: number) {\n    this.employeeService.getEmployee(id)\n      .subscribe(\n        (employee: IEmployee) => {\n          this.employee = employee;\n          this.editEmployee(employee); // LINE 78\n        },\n        (err: any) => console.log(err)\n      );\n  }\n  // UPDATE BUTTON FUNCTION SERVICE API iiiiiiiiiiiiiiiiiiiiiiii\n  onSubmit(): void {\n    this.mapFormValuesToEmployeeModel();\n    if (this.employee.id) {\n      this.employeeService.updateEmployee(this.employee).subscribe(\n        () => this.router.navigate(['edit']),\n        (err: any) => console.log(err)\n      );\n    }\n  }\n  // ADD BUTTON FUNCTION SERVICE API iiiiiiiiiiiiiiiiiiiiiiiiiii\n  onadd(): void {\n    this.mapFormValuesToEmployeeModel();\n    this.employeeService.addEmployee(this.employee).subscribe(\n      () => this.router.navigate(['list']),\n      (err: any) => console.log(err)\n    );\n  }\n  mapFormValuesToEmployeeModel() {\n    this.employee.fullName = this.employeeForm.value.fullName;\n    this.employee.contactPreference = this.employeeForm.value.contactPreference;\n    this.employee.email = this.employeeForm.value.emailGroup.email;\n    this.employee.phone = this.employeeForm.value.phone;\n    this.employee.skills = this.employeeForm.value.skills;\n  }\n  // ENDDDDDDDDDDDDDD APIIIIIIIIIII\n  // END\n\n  // VALIDATION MESSAGES\n  validationMessages = {\n    'fullName': {\n      'required': 'Full Name is required.',\n      'minlength': 'Full Name must be greater than 2 characters',\n      'maxlength': 'Full Name must be less than 10 characters.',\n    },\n    'email': {\n      'required': 'Email is required.',\n      'emailDomain': 'Email domian should be dell.com'\n    },\n    'confirmEmail': {\n      'required': 'Confirm Email is required.'\n    },\n    'emailGroup': {\n      'emailMismatch': 'Email and Confirm Email do not match.'\n    },\n    'phone': {\n      'required': 'Phone is required.'\n    },\n  };\n  formErrors = {\n  };\n}","import { Injectable } from '@angular/core';\r\nimport { IEmployee } from '../IEmployee';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EmployeeService {\r\n    baseUrl = 'http://localhost:3000/two';\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n    // ***********************API************************************\r\n    // GETTING DATA FROM DATABASE\r\n    getEmployees(): Observable<IEmployee[]> {\r\n        return this.httpClient.get<IEmployee[]>(this.baseUrl)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    // GETTING DATA BY ID FROM DATABASE\r\n    getEmployee(id: number): Observable<IEmployee> {\r\n        return this.httpClient.get<IEmployee>(`${this.baseUrl}/${id}`)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    // ADDING DATA TO DATABASE\r\n    addEmployee(employee: IEmployee): Observable<IEmployee> {\r\n        return this.httpClient.post<IEmployee>(this.baseUrl, employee, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    // UPDATING DATA TO DATABASE\r\n    updateEmployee(employee: IEmployee): Observable<void> {\r\n        return this.httpClient.put<void>(`${this.baseUrl}/${employee.id}`, employee, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    // DELETE DATA IN DATA BASE\r\n    deleteEmployee(id: number): Observable<void> {\r\n        return this.httpClient.delete<void>(`${this.baseUrl}/${id}`)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n    // ERROR HANDLING\r\n    private handleError(errorResponse: HttpErrorResponse) {\r\n        if (errorResponse.error instanceof ErrorEvent) {\r\n            console.error('Client Side Error :', errorResponse.error.message);\r\n        } else {\r\n            console.error('Server Side Error :', errorResponse);\r\n        }\r\n        return throwError('There is a problem with the service. We are notified & working on it. Please try again later.');\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtZW1wbG95ZWVzL2xpc3QtZW1wbG95ZWVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../ctwo/employee.service';\nimport { IEmployee } from '../IEmployee';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { ISkill } from '../ISkill';\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.css']\n})\nexport class ListEmployeesComponent implements OnInit {\n  employees: IEmployee[];\n\n  constructor(private route: ActivatedRoute, private employeeService: EmployeeService, private router: Router) { }\n\n  editButtonClick(employeeId: number) {\n    this.router.navigate(['/list', employeeId]);\n  }\n  deleteButtonClick(employeeid: number) {\n    this.employeeService.deleteEmployee(employeeid).subscribe(\n      () => this.router.navigate(['lisklk']),\n      (err: any) => console.log(err)\n    );\n  }\n  ngOnInit() {\n    // CALLING GET API FROM SERVICE\n    this.employeeService.getEmployees().subscribe(\n      (employeeList) => this.employees = employeeList,\n      (err) => console.log(err)\n    );\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n    static emailDomain(domainName: string) {\r\n        return (control: AbstractControl): { [key: string]: any } | null => {\r\n            const email: string = control.value;\r\n            const domain = email.substring(email.lastIndexOf('@') + 1);\r\n            if (email === '' || domain.toLowerCase() === domainName.toLowerCase()) {\r\n                return null;\r\n            } else {\r\n                return { 'emailDomain': true };\r\n            }\r\n        };\r\n    }\r\n   \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}